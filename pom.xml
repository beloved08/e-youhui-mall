<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.9.RELEASE</version>
        <relativePath/>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.eyh.mall</groupId>
    <artifactId>graduation_design</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>graduation_design</name>

    <!-- 父工程打包方式pom -->
    <packaging>pom</packaging>
    <description>graduation_design</description>

    <!-- 管理的工程列表 -->
    <modules>
        <!-- 具体的工程 -->
        <!-- 通用模块 -->
        <module>eyh-mall-unify</module>
        <!-- feign api模块 -->
        <module>eyh-mall-request</module>
        <!-- 网关模块 -->
        <module>./eyh-mall-gateway</module>
        <!-- 用户模块 -->
        <module>./eyh-mall-user</module>
        <!-- 权限模块 -->
        <module>./eyh-mall-jurisdiction</module>
        <!-- 阿里云服务模块 -->
        <module>./eyh-mall-aliyun</module>
        <!-- 商品服务模块 -->
        <module>./eyh-mall-commodity</module>
        <!-- 商家店铺模块 -->
        <module>./eyh-mall-merchantStores</module>
        <!-- 营销模块 -->
        <module>./eyh-mall-marketing</module>
        <!-- 支付模块 -->
        <module>./eyh-mall-pay</module>
        <!-- 物流模块 -->
        <module>./eyh-mall-logistics</module>

    </modules>

    <!-- 多环境配置 -->
    <profiles>
        <!-- 定义具体的环境：生产环境 -->
        <profile>
            <id>pro_env</id>
            <!-- 定义环境中专用的属性值 -->
            <properties>
                <!-- Nacos 环境 -->
                <nacos.env.version>prod</nacos.env.version>
                <!-- Nacos 服务地址 -->
                <nacos.server.addr>localhost:8848</nacos.server.addr>
                <!-- 配置文件中数据库连接地址 -->
                <jdbc.url>jdbc:mysql://localhost:3306/maven</jdbc.url>
                <!-- 配置文件中数据库连接用户名 -->
                <jdbc.db.username>root</jdbc.db.username>
                <!-- 配置文件中数据库连接密码 -->
                <jdbc.db.password>wsbkhs2020</jdbc.db.password>
                <!-- 配置文件中Redis连接的主机地址 -->
                <redis.host>saopingredis2022.redis.rds.aliyuncs.com</redis.host>
                <!-- 配置文件在Redis连接的密码 -->
                <redis.password>Wsbkhs2020</redis.password>
            </properties>
        </profile>
        <!-- 定义具体的环境：开发环境 -->
        <profile>
            <id>dep_env</id>
            <!-- 设置默认启动环境 -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <!-- 定义环境中专用的属性值 -->
            <properties>
                <!-- Nacos 环境 -->
                <nacos.env.version>dev</nacos.env.version>
                <!-- Nacos 服务地址 -->
                <nacos.server.addr>101.43.88.178:8848</nacos.server.addr>
                <!--<nacos.server.addr>localhost:8848</nacos.server.addr>-->
                <!-- elasticsearch 集群地址 -->
                <elasticsearch.host1>101.43.88.178</elasticsearch.host1>
                <elasticsearch.host2>101.43.88.178</elasticsearch.host2>
                <elasticsearch.port1>9201</elasticsearch.port1>
                <elasticsearch.port2>9202</elasticsearch.port2>

                <!-- 微信登录密钥 -->
                <wx.login.appid>微信登录appid</wx.login.appid>
                <wx.login.secret>微信登录secret</wx.login.secret>

                <!-- eyh-mall-jurisdiction 权限模块数据库连接地址 -->
                <eyh.jurisdiction.mysql.master.url>jdbc:mysql://101.43.88.178:3306/eyh-mall-jurisdiction</eyh.jurisdiction.mysql.master.url>
                <!-- eyh-mall-jurisdiction 权限模块从数据库连接地址 -->
                <eyh.jurisdiction.mysql.slave.url>jdbc:mysql://120.79.228.112:3306/eyh-mall-jurisdiction</eyh.jurisdiction.mysql.slave.url>

                <!-- eyh-mall-user 用户模块数据库连接地址 -->
                <eyh.user.mysql.master.url>jdbc:mysql://101.43.88.178:3306/eyh-mall-user</eyh.user.mysql.master.url>
                <!-- eyh-mall-user 用户模块从数据库连接地址 -->
                <eyh.user.mysql.slave.url>jdbc:mysql://120.79.228.112:3306/eyh-mall-user</eyh.user.mysql.slave.url>

                <!-- eyh-mall-logistics 用户模块数据库连接地址 -->
                <eyh.logistics.mysql.master.url>jdbc:mysql://101.43.88.178:3306/eyh-mall-logistics</eyh.logistics.mysql.master.url>
                <!-- eyh-mall-user 用户模块从数据库连接地址 -->
                <eyh.logistics.mysql.slave.url>jdbc:mysql://120.79.228.112:3306/eyh-mall-logistics</eyh.logistics.mysql.slave.url>

                <!-- eyh-mall-pay 支付模块数据库连接地址 -->
                <eyh.pay.mysql.master.url>jdbc:mysql://101.43.88.178:3306/eyh-mall-pay</eyh.pay.mysql.master.url>
                <!-- eyh-mall-pay 支付模块从数据库连接地址 -->
                <eyh.pay.mysql.slave.url>jdbc:mysql://120.79.228.112:3306/eyh-mall-pay</eyh.pay.mysql.slave.url>

                <!-- eyh-mall-commodity 商品模块数据库连接地址 -->
                <eyh.commodity.mysql.master.url>jdbc:mysql://101.43.88.178:3306/eyh-mall-commodity</eyh.commodity.mysql.master.url>
                <!-- eyh-mall-commodity 商品模块从数据库连接地址 -->
                <eyh.commodity.mysql.slave.url>jdbc:mysql://120.79.228.112:3306/eyh-mall-commodity</eyh.commodity.mysql.slave.url>

                <!-- eyh-mall-merchantStores 商家店铺模块数据库连接地址 -->
                <eyh.merchantStores.mysql.master.url>jdbc:mysql://101.43.88.178:3306/eyh-mall-merchantStores</eyh.merchantStores.mysql.master.url>
                <!-- eyh-mall-merchantStores 商家店铺模块从数据库连接地址 -->
                <eyh.merchantStores.mysql.slave.url>jdbc:mysql://120.79.228.112:3306/eyh-mall-merchantStores</eyh.merchantStores.mysql.slave.url>

                <!-- eyh-mall-marketing 营销模块数据库连接地址 -->
                <eyh.marketing.mysql.master.url>jdbc:mysql://101.43.88.178:3306/eyh-mall-markete</eyh.marketing.mysql.master.url>
                <!-- eyh-mall-marketing 营销模块从数据库连接地址 -->
                <eyh.marketing.mysql.slave.url>jdbc:mysql://120.79.228.112:3306/eyh-mall-markete</eyh.marketing.mysql.slave.url>

                <mysql.master.username>root</mysql.master.username>
                <!-- 主数据库连接密码 -->
                <mysql.master.password>主数据库连接密码</mysql.master.password>
                <!-- 从数据库连接用户名 -->
                <mysql.slave.username>root</mysql.slave.username>
                <!-- 从数据库连接密码 -->
                <mysql.slave.password>从数据库连接密码</mysql.slave.password>

                <!-- RabbitMQ连接信息 -->
                <!-- RabbitMQ连接HAProxy代理地址 -->
                <rabbitmq1.url>101.43.88.178:5672</rabbitmq1.url>
                <rabbitmq2.url>101.43.88.178:5673</rabbitmq2.url>
                <rabbitmq3.url>101.43.88.178:5674</rabbitmq3.url>
                <!-- RabbitMQ连接HAProxy代理账号 -->
                <rabbitmq.account>rabbitmq</rabbitmq.account>
                <!-- RabbitMQ连接HAProxy代理密码 -->
                <rabbitmq.password>rabbitmq</rabbitmq.password>
            </properties>
        </profile>
    </profiles>

    <!-- 属性 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <!-- 项目依赖属性配置 -->
        <!-- jdk依赖版本 -->
        <java.version>1.8</java.version>
        <!-- spring.cloud依赖版本 -->
        <spring.cloud.version>Hoxton.SR10</spring.cloud.version>
        <!-- spring.cloud.alibaba依赖版本 -->
        <spring.cloud.alibaba.version>2.2.5.RELEASE</spring.cloud.alibaba.version>
        <!-- spring_mvc依赖版本 -->
        <spring.boot.starter.web.version>3.0.0</spring.boot.starter.web.version>
        <!-- Lombok依赖版本 -->
        <lombok.version>1.18.22</lombok.version>
        <!-- springboot test依赖版本 -->
        <spring-boot.starter.test.version>3.0.0</spring-boot.starter.test.version>
        <!-- elasticsearch rest client 依赖版本-->
        <elasticsearch.version>7.12.1</elasticsearch.version>
        <!-- nacos 客戶端依赖版本 -->
        <nacos.discovery.version>2.2.5.RELEASE</nacos.discovery.version>
        <!-- nacos 配置依赖版本 -->
        <nacos.config.version>2.2.5.RELEASE</nacos.config.version>
        <!-- feign-httpclient依赖版本 -->
        <feign.httpclient.version>10.10.1</feign.httpclient.version>
        <!-- sharding.jdbc依赖版本 -->
        <sharding.jdbc.version>4.1.1</sharding.jdbc.version>
        <!-- druid数据源依赖版本 -->
        <druid.spring.version>1.1.22</druid.spring.version>
        <!-- mysql 依赖版本 -->
        <mysql.version>8.0.32</mysql.version>
        <!-- mybatis-plus 依赖版本 -->
        <mybatis.plus.spring.version>3.5.3</mybatis.plus.spring.version>
        <!-- redis 依赖版本 -->
        <redis.version>3.0.2</redis.version>
        <!-- 连接池依赖 -->
        <commons.pool2.version>2.11.1</commons.pool2.version>
        <!-- lettuce依赖版本 -->
        <lettuce.core.version>5.3.7.RELEASE</lettuce.core.version>
        <!-- shiro依赖版本-->
        <shiro.version>1.10.0</shiro.version>
        <!-- fastjson 依赖版本-->
        <fastjson.version>1.2.31</fastjson.version>
        <!-- jwt依赖版本 -->
        <jjwt.version>0.7.0</jjwt.version>
        <!-- java-jwt 依赖版本-->
        <java.jwt.version>4.2.1</java.jwt.version>
        <!-- 阿里云SDK依赖版本 -->
        <aliyun.sdk.version>3.10.2</aliyun.sdk.version>
        <!-- springboot aop 依赖版本 -->
        <spring.boot.starter.aop.version>3.0.2</spring.boot.starter.aop.version>
        <!-- spring-boot-starter-amqp 依赖版本 -->
        <spring.boot.starter.amqp.version>3.0.0</spring.boot.starter.amqp.version>
        <!-- AMQP依赖版本，包含RabbitMQ -->
        <spring.boot.amqp.version>3.0.0</spring.boot.amqp.version>
        <!-- jackson-databind 依赖版本-->
        <jackson.databind.version>2.13.4</jackson.databind.version>
        <!-- jackson.core 依赖版本 -->
        <jackson.core.version>2.13.4</jackson.core.version>
        <!-- 阿里云短信服务依赖版本 -->
        <dysmsapi20170525.version>2.0.9</dysmsapi20170525.version>
        <commons.io.version>2.6</commons.io.version>
        <darabonba.java.core.version>0.1.3-beta</darabonba.java.core.version>
        <alibabacloud.dysmsapi20170525.version>1.0.1</alibabacloud.dysmsapi20170525.version>
        <aliyun.java.sdk.dysmsapi.version>2.2.1</aliyun.java.sdk.dysmsapi.version>
        <aliyun.java.sdk.core.version>4.0.3</aliyun.java.sdk.core.version>
        <!-- pinyin4j拼音依赖版本 -->
        <pinyin4j.version>2.5.0</pinyin4j.version>
        <!-- easyexcel 依赖版本-->
        <easyexcel.version>3.1.2</easyexcel.version>
        <goeasy.sdk.version>0.4.2</goeasy.sdk.version>
        <zxing.core.version>3.3.3</zxing.core.version>
        <zxing.javase.version>3.3.3</zxing.javase.version>
        <logback.version>1.2.3</logback.version>
    </properties>

    <!-- 声明此处进行依赖管理 -->
    <dependencyManagement>
        <!-- 具体的依赖 -->
        <dependencies>

            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>${zxing.javase.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>javase</artifactId>
                <version>${zxing.javase.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-context</artifactId>
            </dependency>

            <dependency>
                <groupId>io.goeasy</groupId>
                <artifactId>goeasy-sdk</artifactId>
                <version>${goeasy.sdk.version}</version>
            </dependency>

            <dependency>
                <groupId>com.belerweb</groupId>
                <artifactId>pinyin4j</artifactId>
                <version>${pinyin4j.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>

            <!-- 阿里云 OSS 存储 -->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun.sdk.version}</version>
            </dependency>

            <!-- 阿里云短信服务依赖 -->
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>dysmsapi20170525</artifactId>
                <version>${dysmsapi20170525.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>darabonba-java-core</artifactId>
                <version>${darabonba.java.core.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>alibabacloud-dysmsapi20170525</artifactId>
                <version>${alibabacloud.dysmsapi20170525.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-dysmsapi</artifactId>
                <version>${aliyun.java.sdk.dysmsapi.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId>
                <version>${aliyun.java.sdk.core.version}</version>
            </dependency>

            <!-- AMQP依赖，包含RabbitMQ -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${spring.boot.amqp.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${spring.boot.starter.amqp.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring.boot.starter.aop.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring-boot-web-starter</artifactId>
                <version>${shiro.version}</version>
            </dependency>

            <!-- JWT依赖 -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java.jwt.version}</version>
            </dependency>

            <!-- alibaba的json格式化对象 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-jdbc-spring-boot-starter</artifactId>
                <version>${sharding.jdbc.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.spring.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.spring.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!--redis-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${redis.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.lettuce</groupId>
                        <artifactId>lettuce-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.lettuce</groupId>
                <artifactId>lettuce-core</artifactId>
                <version>${lettuce.core.version}</version>
                <scope>compile</scope>
            </dependency>

            <!--连接池依赖-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons.pool2.version}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.starter.web.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>true</optional>
            </dependency>

            <!-- nacos 客户端依赖 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${nacos.discovery.version}</version>
            </dependency>

            <!-- nacos 配置依赖 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                <version>${nacos.config.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.starter.test.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- httpClient 依赖 -->
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-httpclient</artifactId>
                <version>${feign.httpclient.version}</version>
            </dependency>
            <!--这个依赖直接包含了 logback-core 以及 slf4j-api的依赖-->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!-- 配置资源文件 -->
        <resources>
            <!-- 配置资源文件 -->
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>

            <resource>
                <directory>${project.basedir}/src/main/java</directory>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>

            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <includes>
                    <include>*</include>
                    <include>*/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>

        </resources>

        <!-- 测试配置资源文件 -->
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <!--<plugins>-->
        <!--    <plugin>-->
        <!--        <groupId>org.springframework.boot</groupId>-->
        <!--        <artifactId>spring-boot-maven-plugin</artifactId>-->
        <!--    </plugin>-->
        <!--</plugins>-->
    </build>

</project>
